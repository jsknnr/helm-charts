apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    app: "{{ .Chart.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
    spec:
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      containers:
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: SERVER_NAME
          value: {{ .Values.config.serverName | squote }}
        - name: SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "enshrouded.passwordSecretName" . }}
              key: serverPassword
        - name: PORT
          value: {{ .Values.config.port | squote }}
        - name: SERVER_SLOTS
          value: {{ .Values.config.serverSlots | squote }}
        - name: EXTERNAL_CONFIG
          value: {{ .Values.config.externalConfig | squote }}
        ports:
        - name: port
          containerPort: {{ .Values.config.port | int }}
          protocol: UDP
        volumeMounts:
        - name: data
          mountPath: /home/steam/enshrouded/savegame
        securityContext:
          allowPrivilegeEscalation: false
          
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-data"
